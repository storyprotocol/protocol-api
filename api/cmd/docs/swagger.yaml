definitions:
  beta_v0.Dispute:
    properties:
      arbitrationPolicy:
        type: string
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      currentTag:
        type: string
      data:
        type: string
      evidenceLink:
        type: string
      id:
        type: string
      initiator:
        type: string
      targetIpId:
        type: string
      targetTag:
        type: string
    type: object
  beta_v0.DisputeResponse:
    properties:
      data:
        $ref: '#/definitions/beta_v0.Dispute'
    type: object
  beta_v0.DisputesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/beta_v0.Dispute'
        type: array
    type: object
  beta_v0.FrameworkCreationParams:
    properties:
      activationParamDefaultValues:
        items:
          type: string
        type: array
      activationParamVerifiers:
        items:
          type: string
        type: array
      defaultNeedsActivation:
        type: boolean
      id:
        type: string
      licenseUrl:
        type: string
      linkParentParamDefaultValues:
        items:
          type: string
        type: array
      linkParentParamVerifiers:
        items:
          type: string
        type: array
      mintingParamDefaultValues:
        items:
          type: string
        type: array
      mintingParamVerifiers:
        items:
          type: string
        type: array
    type: object
  beta_v0.IPAPoliciesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/beta_v0.IPAPolicy'
        type: array
    type: object
  beta_v0.IPAPolicy:
    properties:
      active:
        type: boolean
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      id:
        type: string
      index:
        type: string
      inherited:
        type: boolean
      ipId:
        type: string
      policyId:
        type: string
    type: object
  beta_v0.IPAPolicyResponse:
    properties:
      data:
        $ref: '#/definitions/beta_v0.IPAPolicy'
    type: object
  beta_v0.IPAsset:
    properties:
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      chainId:
        type: string
      id:
        type: string
      ipId:
        type: string
      metadata:
        type: string
      metadataResolverAddress:
        type: string
      tokenContract:
        type: string
      tokenId:
        type: string
    type: object
  beta_v0.IPAssetResponse:
    properties:
      data:
        $ref: '#/definitions/beta_v0.IPAsset'
    type: object
  beta_v0.IPAssetsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/beta_v0.IPAsset'
        type: array
    type: object
  beta_v0.License:
    properties:
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      id:
        type: string
      licensorIpId:
        type: string
      policyId:
        type: string
      transferable:
        type: boolean
    type: object
  beta_v0.LicenseFramework:
    properties:
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      creator:
        type: string
      frameworkCreationParams:
        $ref: '#/definitions/beta_v0.FrameworkCreationParams'
      id:
        type: string
    type: object
  beta_v0.LicenseFrameworkResponse:
    properties:
      data:
        $ref: '#/definitions/beta_v0.LicenseFramework'
    type: object
  beta_v0.LicenseFrameworksResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/beta_v0.LicenseFramework'
        type: array
    type: object
  beta_v0.LicenseResponse:
    properties:
      data:
        $ref: '#/definitions/beta_v0.License'
    type: object
  beta_v0.LicensesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/beta_v0.License'
        type: array
    type: object
  beta_v0.Module:
    properties:
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      module:
        type: string
      name:
        type: string
    type: object
  beta_v0.ModuleResponse:
    properties:
      data:
        $ref: '#/definitions/beta_v0.Module'
    type: object
  beta_v0.ModulesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/beta_v0.Module'
        type: array
    type: object
  beta_v0.Permission:
    properties:
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      func:
        type: string
      id:
        type: string
      permission:
        type: string
      signer:
        type: string
      to:
        type: string
      uuid:
        type: string
    type: object
  beta_v0.PermissionResponse:
    properties:
      data:
        $ref: '#/definitions/beta_v0.Permission'
    type: object
  beta_v0.PermissionsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/beta_v0.Permission'
        type: array
    type: object
  beta_v0.PoliciesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/beta_v0.Policy'
        type: array
    type: object
  beta_v0.Policy:
    properties:
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      id:
        type: string
      policy:
        type: string
      policyFrameworkManager:
        type: string
      policyId:
        type: string
    type: object
  beta_v0.PolicyFrameworkManager:
    properties:
      address:
        type: string
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      id:
        type: string
      licenseUrl:
        type: string
      name:
        type: string
    type: object
  beta_v0.PolicyFrameworkManagerResponse:
    properties:
      data:
        $ref: '#/definitions/beta_v0.PolicyFrameworkManager'
    type: object
  beta_v0.PolicyFrameworkManagersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/beta_v0.PolicyFrameworkManager'
        type: array
    type: object
  beta_v0.PolicyResponse:
    properties:
      data:
        $ref: '#/definitions/beta_v0.Policy'
    type: object
  beta_v0.RoyaltiesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/beta_v0.Royalty'
        type: array
    type: object
  beta_v0.Royalty:
    properties:
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      data:
        type: string
      id:
        type: string
      ipId:
        type: string
      royaltyPolicy:
        type: string
    type: object
  beta_v0.RoyaltyPay:
    properties:
      amount:
        type: string
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      id:
        type: string
      payerIpId:
        type: string
      receiverIpId:
        type: string
      sender:
        type: string
      token:
        type: string
    type: object
  beta_v0.RoyaltyPayResponse:
    properties:
      data:
        $ref: '#/definitions/beta_v0.RoyaltyPay'
    type: object
  beta_v0.RoyaltyPaysResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/beta_v0.RoyaltyPay'
        type: array
    type: object
  beta_v0.RoyaltyResponse:
    properties:
      data:
        $ref: '#/definitions/beta_v0.Royalty'
    type: object
  beta_v0.Tag:
    properties:
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      ipId:
        type: string
      tag:
        type: string
      uuid:
        type: string
    type: object
  beta_v0.TagResponse:
    properties:
      data:
        $ref: '#/definitions/beta_v0.Tag'
    type: object
  beta_v0.TagsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/beta_v0.Tag'
        type: array
    type: object
  options.QueryOptions:
    properties:
      orderBy:
        type: string
      orderDirection:
        type: string
      pagination:
        properties:
          limit:
            type: integer
          offset:
            type: integer
        type: object
      where:
        properties:
          creator:
            type: string
          frameworkId:
            type: string
          ipAsset:
            type: string
          ipId:
            type: string
          receiver:
            type: string
          tokenContract:
            type: string
        type: object
    type: object
  options.RequestBody:
    properties:
      options:
        $ref: '#/definitions/options.QueryOptions'
    type: object
info:
  contact: {}
paths:
  /api/v1/assets:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of IPAssets
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/options.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.IPAssetsResponse'
      security:
      - ApiKeyAuth: []
      summary: List IPAssets
      tags:
      - IPAssets
  /api/v1/assets/{assetId}:
    get:
      consumes:
      - application/json
      description: Retrieve an IPAsset
      parameters:
      - description: Asset ID
        in: path
        name: assetId
        required: true
        type: string
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.IPAssetResponse'
      security:
      - ApiKeyAuth: []
      summary: Get an IPAsset
      tags:
      - IPAssets
  /api/v1/disputes:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of Disputes
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/options.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.DisputesResponse'
      security:
      - ApiKeyAuth: []
      summary: List Disputes
      tags:
      - Disputes
  /api/v1/disputes/{disputeId}:
    get:
      consumes:
      - application/json
      description: Retrieve a Dispute
      parameters:
      - description: Dispute ID
        in: path
        name: disputeId
        required: true
        type: string
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.DisputeResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a Dispute
      tags:
      - Disputes
  /api/v1/ipapolicies:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of Policies
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/options.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.IPAPoliciesResponse'
      security:
      - ApiKeyAuth: []
      summary: List IPAPolicies
      tags:
      - IPAPolicies
  /api/v1/ipapolicies/{ipaPolicyId}:
    get:
      consumes:
      - application/json
      description: Retrieve a IPAPolicy
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: IPAPolicy ID
        in: path
        name: ipaPolicyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.IPAPolicyResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a IPAPolicy
      tags:
      - IPAPolicies
  /api/v1/licenseframeworks:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of LicenseFrameworks
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/options.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.LicenseFrameworksResponse'
      security:
      - ApiKeyAuth: []
      summary: List LicenseFrameworks
      tags:
      - LicenseFrameworks
  /api/v1/licenseframeworks/{frameworkId}:
    get:
      consumes:
      - application/json
      description: Retrieve a LicenseFramework
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Framework ID
        in: path
        name: frameworkId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.LicenseFrameworkResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a LicenseFramework
      tags:
      - LicenseFrameworks
  /api/v1/licenses:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of Licenses
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/options.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.LicensesResponse'
      security:
      - ApiKeyAuth: []
      summary: List Licenses
      tags:
      - Licenses
  /api/v1/licenses/{licenseId}:
    get:
      consumes:
      - application/json
      description: Retrieve a License
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: License ID
        in: path
        name: licenseId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.LicenseResponse'
      security:
      - ApiKeyAuth: []
      summary: Get an License
      tags:
      - Licenses
  /api/v1/modules:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of Modules
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/options.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.ModulesResponse'
      security:
      - ApiKeyAuth: []
      summary: List Modules
      tags:
      - Modules
  /api/v1/modules/{moduleId}:
    get:
      consumes:
      - application/json
      description: Retrieve a Module
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Module ID
        in: path
        name: moduleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.ModuleResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a GetModule
      tags:
      - Modules
  /api/v1/permissions:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of Permissions
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/options.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.PermissionsResponse'
      security:
      - ApiKeyAuth: []
      summary: List Permissions
      tags:
      - Permissions
  /api/v1/permissions/{permissionId}:
    get:
      consumes:
      - application/json
      description: Retrieve a Permission
      parameters:
      - description: Permission ID
        in: path
        name: permissionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.PermissionResponse'
      summary: Get a Permission
      tags:
      - Permissions
  /api/v1/policies:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of Policies
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/options.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.PoliciesResponse'
      security:
      - ApiKeyAuth: []
      summary: List Policies
      tags:
      - Policies
  /api/v1/policies/{policyId}:
    get:
      consumes:
      - application/json
      description: Retrieve a Policy
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Policy ID
        in: path
        name: policyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.PolicyResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a Policy
      tags:
      - Policies
  /api/v1/policyframeworks/{pfwmId}:
    get:
      consumes:
      - application/json
      description: Retrieve a PolicyFrameworkManager
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: PolicyFrameworkManager ID
        in: path
        name: pfwmId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.PolicyFrameworkManagerResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a PolicyFrameworkManager
      tags:
      - PolicyFrameworkManagers
  /api/v1/policymanagers:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of PolicyFrameworkManagers
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/options.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.PolicyFrameworkManagersResponse'
      security:
      - ApiKeyAuth: []
      summary: List PolicyFrameworkManagers
      tags:
      - PolicyFrameworkManagers
  /api/v1/royalties:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of Royalties
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/options.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.RoyaltiesResponse'
      security:
      - ApiKeyAuth: []
      summary: List Royalties
      tags:
      - Royalties
  /api/v1/royalties/{royaltyId}:
    get:
      consumes:
      - application/json
      description: Retrieve a Royalty
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Royalty ID
        in: path
        name: royaltyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.RoyaltyResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a Royalty
      tags:
      - Royalties
  /api/v1/royaltypays:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of RoyaltyPays
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/options.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.RoyaltyPaysResponse'
      security:
      - ApiKeyAuth: []
      summary: List RoyaltyPays
      tags:
      - RoyaltyPays
  /api/v1/royaltypays/{royaltyPayId}:
    get:
      consumes:
      - application/json
      description: Retrieve a RoyaltyPay
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: RoyaltyPay ID
        in: path
        name: royaltyPayId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.RoyaltyPayResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a RoyaltyPay
      tags:
      - RoyaltyPays
  /api/v1/tags:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of Tags
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/options.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.TagsResponse'
      security:
      - ApiKeyAuth: []
      summary: List Tags
      tags:
      - Tags
  /api/v1/tags/{tagId}:
    get:
      consumes:
      - application/json
      description: Retrieve a Tag
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Tag ID
        in: path
        name: tagId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/beta_v0.TagResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a Tag
      tags:
      - Tags
swagger: "2.0"
