definitions:
  betav0.Collection:
    properties:
      assetCount:
        type: string
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      cancelledDisputeCount:
        type: string
      id:
        type: string
      judgedDisputeCount:
        type: string
      licensesCount:
        type: string
      raisedDisputeCount:
        type: string
      resolvedDisputeCount:
        type: string
    type: object
  betav0.CollectionQueryOptions:
    properties:
      orderBy:
        type: string
      orderDirection:
        type: string
      pagination:
        properties:
          limit:
            type: integer
          offset:
            type: integer
        type: object
      where:
        type: object
    type: object
  betav0.CollectionResponse:
    properties:
      data:
        $ref: '#/definitions/betav0.Collection'
    type: object
  betav0.CollectionsRequestBody:
    properties:
      options:
        $ref: '#/definitions/betav0.CollectionQueryOptions'
    type: object
  betav0.CollectionsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/betav0.Collection'
        type: array
    type: object
  betav0.Dispute:
    properties:
      arbitrationPolicy:
        type: string
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      currentTag:
        type: string
      data:
        type: string
      evidenceLink:
        type: string
      id:
        type: string
      initiator:
        type: string
      targetIpId:
        type: string
      targetTag:
        type: string
    type: object
  betav0.DisputeQueryOptions:
    properties:
      orderBy:
        type: string
      orderDirection:
        type: string
      pagination:
        properties:
          limit:
            type: integer
          offset:
            type: integer
        type: object
      where:
        properties:
          currentTag:
            type: string
          initiator:
            type: string
          targetIpId:
            type: string
          targetTag:
            type: string
        type: object
    type: object
  betav0.DisputeRequestBody:
    properties:
      options:
        $ref: '#/definitions/betav0.DisputeQueryOptions'
    type: object
  betav0.DisputeResponse:
    properties:
      data:
        $ref: '#/definitions/betav0.Dispute'
    type: object
  betav0.DisputesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/betav0.Dispute'
        type: array
    type: object
  betav0.Holder:
    properties:
      id:
        type: string
      ownership:
        type: string
    type: object
  betav0.IPAPQueryOptions:
    properties:
      orderBy:
        type: string
      orderDirection:
        type: string
      pagination:
        properties:
          limit:
            type: integer
          offset:
            type: integer
        type: object
      where:
        properties:
          active:
            type: boolean
          inherited:
            type: boolean
          ipId:
            type: string
          policyId:
            type: string
        type: object
    type: object
  betav0.IPAPoliciesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/betav0.IPAPolicy'
        type: array
    type: object
  betav0.IPAPolicy:
    properties:
      active:
        type: boolean
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      id:
        type: string
      index:
        type: string
      inherited:
        type: boolean
      ipId:
        type: string
      policyId:
        type: string
    type: object
  betav0.IPAPolicyRequestBody:
    properties:
      options:
        $ref: '#/definitions/betav0.IPAPQueryOptions'
    type: object
  betav0.IPAPolicyResponse:
    properties:
      data:
        $ref: '#/definitions/betav0.IPAPolicy'
    type: object
  betav0.IPAsset:
    properties:
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      chainId:
        type: string
      childIpIds:
        items:
          $ref: '#/definitions/betav0.IPAsset'
        type: array
      id:
        type: string
      metadata:
        $ref: '#/definitions/betav0.Metadata'
      metadataResolverAddress:
        type: string
      parentIpIds:
        items:
          $ref: '#/definitions/betav0.IPAsset'
        type: array
      rootIpIds:
        items:
          $ref: '#/definitions/betav0.IPAsset'
        type: array
      tokenContract:
        type: string
      tokenId:
        type: string
    type: object
  betav0.IPAssetResponse:
    properties:
      data:
        $ref: '#/definitions/betav0.IPAsset'
    type: object
  betav0.IPAssetsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/betav0.IPAsset'
        type: array
    type: object
  betav0.IpAssetQueryOptions:
    properties:
      orderBy:
        type: string
      orderDirection:
        type: string
      pagination:
        properties:
          limit:
            type: integer
          offset:
            type: integer
        type: object
      where:
        properties:
          chainId:
            type: string
          metadataResolverAddress:
            type: string
          tokenContract:
            type: string
          tokenId:
            type: string
        type: object
    type: object
  betav0.IpAssetRequestBody:
    properties:
      options:
        $ref: '#/definitions/betav0.IpAssetQueryOptions'
    type: object
  betav0.License:
    properties:
      amount:
        type: string
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      id:
        type: string
      licensorIpId:
        type: string
      policyId:
        type: string
      transferable:
        type: boolean
    type: object
  betav0.LicenseMintingFeePaid:
    properties:
      amount:
        type: string
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      id:
        type: string
      payer:
        type: string
      receiverIpId:
        type: string
      token:
        type: string
    type: object
  betav0.LicenseMintingFeePaidQueryOptions:
    properties:
      orderBy:
        type: string
      orderDirection:
        type: string
      pagination:
        properties:
          limit:
            type: integer
          offset:
            type: integer
        type: object
      where:
        properties:
          payer:
            type: string
          receiverIpId:
            type: string
          token:
            type: string
        type: object
    type: object
  betav0.LicenseMintingFeePaidRequestBody:
    properties:
      options:
        $ref: '#/definitions/betav0.LicenseMintingFeePaidQueryOptions'
    type: object
  betav0.LicenseMintingFeePaidResponse:
    properties:
      data:
        $ref: '#/definitions/betav0.LicenseMintingFeePaid'
    type: object
  betav0.LicenseMintingFeePaidsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/betav0.LicenseMintingFeePaid'
        type: array
    type: object
  betav0.LicenseOwner:
    properties:
      amount:
        type: string
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      id:
        type: string
      owner:
        type: string
      policyId:
        type: string
    type: object
  betav0.LicenseOwnerQueryOptions:
    properties:
      orderBy:
        type: string
      orderDirection:
        type: string
      pagination:
        properties:
          limit:
            type: integer
          offset:
            type: integer
        type: object
      where:
        properties:
          owner:
            type: string
          policyId:
            type: string
        type: object
    type: object
  betav0.LicenseOwnerResponse:
    properties:
      data:
        $ref: '#/definitions/betav0.LicenseOwner'
    type: object
  betav0.LicenseOwnersRequestBody:
    properties:
      options:
        $ref: '#/definitions/betav0.LicenseOwnerQueryOptions'
    type: object
  betav0.LicenseOwnersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/betav0.LicenseOwner'
        type: array
    type: object
  betav0.LicenseQueryOptions:
    properties:
      orderBy:
        type: string
      orderDirection:
        type: string
      pagination:
        properties:
          limit:
            type: integer
          offset:
            type: integer
        type: object
      where:
        properties:
          licensorIpdId:
            type: string
          policyId:
            type: string
          transferable:
            type: boolean
        type: object
    type: object
  betav0.LicenseRequestBody:
    properties:
      options:
        $ref: '#/definitions/betav0.LicenseQueryOptions'
    type: object
  betav0.LicenseResponse:
    properties:
      data:
        $ref: '#/definitions/betav0.License'
    type: object
  betav0.LicensesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/betav0.License'
        type: array
    type: object
  betav0.Metadata:
    properties:
      hash:
        type: string
      name:
        type: string
      registrant:
        type: string
      registrationDate:
        type: string
      uri:
        type: string
    type: object
  betav0.Module:
    properties:
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      module:
        type: string
      name:
        type: string
    type: object
  betav0.ModuleQueryOptions:
    properties:
      orderBy:
        type: string
      orderDirection:
        type: string
      pagination:
        properties:
          limit:
            type: integer
          offset:
            type: integer
        type: object
      where:
        properties:
          name:
            type: string
        type: object
    type: object
  betav0.ModuleRequestBody:
    properties:
      options:
        $ref: '#/definitions/betav0.ModuleQueryOptions'
    type: object
  betav0.ModuleResponse:
    properties:
      data:
        $ref: '#/definitions/betav0.Module'
    type: object
  betav0.ModulesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/betav0.Module'
        type: array
    type: object
  betav0.PFWMQueryOptions:
    properties:
      orderBy:
        type: string
      orderDirection:
        type: string
      pagination:
        properties:
          limit:
            type: integer
          offset:
            type: integer
        type: object
      where:
        properties:
          address:
            type: string
          name:
            type: string
        type: object
    type: object
  betav0.PILPolicy:
    properties:
      attribution:
        type: boolean
      commercialAttribution:
        type: boolean
      commercialRevShare:
        type: string
      commercialUse:
        type: boolean
      commercializerChecker:
        type: string
      commercializerCheckerData:
        type: string
      contentRestrictions:
        items:
          type: string
        type: array
      derivativesAllowed:
        type: boolean
      derivativesApproval:
        type: boolean
      derivativesAttribution:
        type: boolean
      derivativesReciprocal:
        type: boolean
      distributionChannels:
        items:
          type: string
        type: array
      id:
        type: string
      territories:
        items:
          type: string
        type: array
    type: object
  betav0.Permission:
    properties:
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      func:
        type: string
      id:
        type: string
      permission:
        type: string
      signer:
        type: string
      to:
        type: string
      uuid:
        type: string
    type: object
  betav0.PermissionQueryOptions:
    properties:
      orderBy:
        type: string
      orderDirection:
        type: string
      pagination:
        properties:
          limit:
            type: integer
          offset:
            type: integer
        type: object
      where:
        properties:
          signer:
            type: string
          to:
            type: string
        type: object
    type: object
  betav0.PermissionRequestBody:
    properties:
      options:
        $ref: '#/definitions/betav0.PermissionQueryOptions'
    type: object
  betav0.PermissionResponse:
    properties:
      data:
        $ref: '#/definitions/betav0.Permission'
    type: object
  betav0.PermissionsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/betav0.Permission'
        type: array
    type: object
  betav0.PoliciesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/betav0.Policy'
        type: array
    type: object
  betav0.Policy:
    properties:
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      frameworkData:
        type: string
      id:
        type: string
      mintingFee:
        type: string
      mintingFeeToken:
        type: string
      pil:
        $ref: '#/definitions/betav0.PILPolicy'
      policyFrameworkManager:
        type: string
      royaltyData:
        type: string
      royaltyPolicy:
        type: string
    type: object
  betav0.PolicyFrameworkManager:
    properties:
      address:
        type: string
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      id:
        type: string
      licenseUrl:
        type: string
      name:
        type: string
    type: object
  betav0.PolicyFrameworkManagerRequestBody:
    properties:
      options:
        $ref: '#/definitions/betav0.PFWMQueryOptions'
    type: object
  betav0.PolicyFrameworkManagerResponse:
    properties:
      data:
        $ref: '#/definitions/betav0.PolicyFrameworkManager'
    type: object
  betav0.PolicyFrameworkManagersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/betav0.PolicyFrameworkManager'
        type: array
    type: object
  betav0.PolicyQueryOptions:
    properties:
      orderBy:
        type: string
      orderDirection:
        type: string
      pagination:
        properties:
          limit:
            type: integer
          offset:
            type: integer
        type: object
      where:
        properties:
          mintingFeeToken:
            type: string
          policyFrameworkManager:
            type: string
          royaltyPolicy:
            type: string
        type: object
    type: object
  betav0.PolicyRequestBody:
    properties:
      options:
        $ref: '#/definitions/betav0.PolicyQueryOptions'
    type: object
  betav0.PolicyResponse:
    properties:
      data:
        $ref: '#/definitions/betav0.Policy'
    type: object
  betav0.RoyaltyPay:
    properties:
      amount:
        type: string
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      id:
        type: string
      payerIpId:
        type: string
      receiverIpId:
        type: string
      sender:
        type: string
      token:
        type: string
    type: object
  betav0.RoyaltyPayQueryOptions:
    properties:
      orderBy:
        type: string
      orderDirection:
        type: string
      pagination:
        properties:
          limit:
            type: integer
          offset:
            type: integer
        type: object
      where:
        properties:
          payerIpId:
            type: string
          receiverIpId:
            type: string
          sender:
            type: string
          token:
            type: string
        type: object
    type: object
  betav0.RoyaltyPayRequestBody:
    properties:
      options:
        $ref: '#/definitions/betav0.RoyaltyPayQueryOptions'
    type: object
  betav0.RoyaltyPayResponse:
    properties:
      data:
        $ref: '#/definitions/betav0.RoyaltyPay'
    type: object
  betav0.RoyaltyPaysResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/betav0.RoyaltyPay'
        type: array
    type: object
  betav0.RoyaltyPoliciesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/betav0.RoyaltyPolicy'
        type: array
    type: object
  betav0.RoyaltyPolicy:
    properties:
      ancestorsVault:
        type: string
      blockNumber:
        type: string
      blockTimestamp:
        type: string
      id:
        type: string
      royaltyStack:
        type: string
      splitClone:
        type: string
      targetAncestors:
        items:
          type: string
        type: array
      targetRoyaltyAmount:
        items:
          type: string
        type: array
    type: object
  betav0.RoyaltyPolicyResponse:
    properties:
      data:
        $ref: '#/definitions/betav0.RoyaltyPolicy'
    type: object
  betav0.RoyaltyQueryOptions:
    properties:
      orderBy:
        type: string
      orderDirection:
        type: string
      pagination:
        properties:
          limit:
            type: integer
          offset:
            type: integer
        type: object
      where:
        properties:
          ipId:
            type: string
          royaltyPolicy:
            type: string
        type: object
    type: object
  betav0.RoyaltyRequestBody:
    properties:
      options:
        $ref: '#/definitions/betav0.RoyaltyQueryOptions'
    type: object
  betav0.RoyaltySplit:
    properties:
      claimFromIPPoolArg:
        type: string
      holders:
        items:
          $ref: '#/definitions/betav0.Holder'
        type: array
      id:
        type: string
    type: object
  betav0.RoyaltySplitResponse:
    properties:
      data:
        $ref: '#/definitions/betav0.RoyaltySplit'
    type: object
  betav0.Transaction:
    properties:
      actionType:
        type: string
      createdAt:
        type: string
      id:
        type: string
      initiator:
        type: string
      ipId:
        type: string
      resourceId:
        type: string
      resourceType:
        type: string
    type: object
  betav0.TransactionRequestBody:
    properties:
      options:
        $ref: '#/definitions/betav0.TrxQueryOptions'
    type: object
  betav0.TransactionResponse:
    properties:
      data:
        $ref: '#/definitions/betav0.Transaction'
    type: object
  betav0.TransactionsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/betav0.Transaction'
        type: array
    type: object
  betav0.TrxQueryOptions:
    properties:
      orderBy:
        type: string
      orderDirection:
        type: string
      pagination:
        properties:
          limit:
            type: integer
          offset:
            type: integer
        type: object
      where:
        properties:
          actionType:
            type: string
          ipId:
            type: string
          resourceId:
            type: string
        type: object
    type: object
info:
  contact: {}
paths:
  /api/v1/assets:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of IPAssets
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/betav0.IpAssetRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.IPAssetsResponse'
      security:
      - ApiKeyAuth: []
      summary: List IPAssets
      tags:
      - IPAssets
  /api/v1/assets/{assetId}:
    get:
      consumes:
      - application/json
      description: Retrieve an IPAsset
      parameters:
      - description: Asset ID
        in: path
        name: assetId
        required: true
        type: string
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.IPAssetResponse'
      security:
      - ApiKeyAuth: []
      summary: Get an IPAsset
      tags:
      - IPAssets
  /api/v1/collections:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of Collections
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/betav0.CollectionsRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.CollectionsResponse'
      security:
      - ApiKeyAuth: []
      summary: List Collections
      tags:
      - Collections
  /api/v1/collections/{collectionId}:
    get:
      consumes:
      - application/json
      description: Retrieve a Collection
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Collection ID
        in: path
        name: collectionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.CollectionResponse'
      security:
      - ApiKeyAuth: []
      summary: Get an Collection
      tags:
      - Collections
  /api/v1/disputes:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of Disputes
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/betav0.DisputeRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.DisputesResponse'
      security:
      - ApiKeyAuth: []
      summary: List Disputes
      tags:
      - Disputes
  /api/v1/disputes/{disputeId}:
    get:
      consumes:
      - application/json
      description: Retrieve a Dispute
      parameters:
      - description: Dispute ID
        in: path
        name: disputeId
        required: true
        type: string
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.DisputeResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a Dispute
      tags:
      - Disputes
  /api/v1/ipapolicies:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of Policies
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/betav0.IPAPolicyRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.IPAPoliciesResponse'
      security:
      - ApiKeyAuth: []
      summary: List IPAPolicies
      tags:
      - IPAPolicies
  /api/v1/ipapolicies/{ipaPolicyId}:
    get:
      consumes:
      - application/json
      description: Retrieve a IPAPolicy
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: IPAPolicy ID
        in: path
        name: ipaPolicyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.IPAPolicyResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a IPAPolicy
      tags:
      - IPAPolicies
  /api/v1/licenses:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of Licenses
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/betav0.LicenseRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.LicensesResponse'
      security:
      - ApiKeyAuth: []
      summary: List Licenses
      tags:
      - Licenses
  /api/v1/licenses/{licenseId}:
    get:
      consumes:
      - application/json
      description: Retrieve a License
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: License ID
        in: path
        name: licenseId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.LicenseResponse'
      security:
      - ApiKeyAuth: []
      summary: Get an License
      tags:
      - Licenses
  /api/v1/licenses/mintingfees:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of LicenseMintingFeePaids
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/betav0.LicenseMintingFeePaidRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.LicenseMintingFeePaidsResponse'
      security:
      - ApiKeyAuth: []
      summary: List LicenseMintingFeePays
      tags:
      - Licenses
  /api/v1/licenses/mintingfees/{licenseMintingFeePaidId}:
    get:
      consumes:
      - application/json
      description: Retrieve a LicenseMintingFeePay
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: LicenseMintingFeePay ID
        in: path
        name: licenseMintingFeePaidId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.LicenseMintingFeePaidResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a LicenseMintingFeePay
      tags:
      - Licenses
  /api/v1/licenses/owners:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of LicenseOwners
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/betav0.LicenseOwnersRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.LicenseOwnersResponse'
      security:
      - ApiKeyAuth: []
      summary: List LicenseOwners
      tags:
      - Licenses
  /api/v1/licenses/owners/{licenseOwnerId}:
    get:
      consumes:
      - application/json
      description: Retrieve a LicenseOwner
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: LicenseOwner ID
        in: path
        name: licenseOwnerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.LicenseOwnerResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a LicenseOwner
      tags:
      - Licenses
  /api/v1/modules:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of Modules
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/betav0.ModuleRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.ModulesResponse'
      security:
      - ApiKeyAuth: []
      summary: List Modules
      tags:
      - Modules
  /api/v1/modules/{moduleId}:
    get:
      consumes:
      - application/json
      description: Retrieve a Module
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Module ID
        in: path
        name: moduleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.ModuleResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a Module
      tags:
      - Modules
  /api/v1/permissions:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of Permissions
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/betav0.PermissionRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.PermissionsResponse'
      security:
      - ApiKeyAuth: []
      summary: List Permissions
      tags:
      - Permissions
  /api/v1/permissions/{permissionId}:
    get:
      consumes:
      - application/json
      description: Retrieve a Permission
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Permission ID
        in: path
        name: permissionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.PermissionResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a Permission
      tags:
      - Permissions
  /api/v1/policies:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of Policies
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/betav0.PolicyRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.PoliciesResponse'
      security:
      - ApiKeyAuth: []
      summary: List Policies
      tags:
      - Policies
  /api/v1/policies/{policyId}:
    get:
      consumes:
      - application/json
      description: Retrieve a Policy
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Policy ID
        in: path
        name: policyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.PolicyResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a Policy
      tags:
      - Policies
  /api/v1/policies/frameworks:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of PolicyFrameworkManagers
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/betav0.PolicyFrameworkManagerRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.PolicyFrameworkManagersResponse'
      security:
      - ApiKeyAuth: []
      summary: List PolicyFrameworkManagers
      tags:
      - Policies
  /api/v1/policies/frameworks/{pfwmId}:
    get:
      consumes:
      - application/json
      description: Retrieve a PolicyFrameworkManager
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: PolicyFrameworkManager ID
        in: path
        name: pfwmId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.PolicyFrameworkManagerResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a PolicyFrameworkManager
      tags:
      - Policies
  /api/v1/royalties/payments:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of RoyaltyPays
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/betav0.RoyaltyPayRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.RoyaltyPaysResponse'
      security:
      - ApiKeyAuth: []
      summary: List RoyaltyPays
      tags:
      - Royalties
  /api/v1/royalties/payments/{royaltyPayId}:
    get:
      consumes:
      - application/json
      description: Retrieve a RoyaltyPay
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: RoyaltyPay ID
        in: path
        name: royaltyPayId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.RoyaltyPayResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a RoyaltyPay
      tags:
      - Royalties
  /api/v1/royalties/policies:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of RoyaltyPolicies
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/betav0.RoyaltyRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.RoyaltyPoliciesResponse'
      security:
      - ApiKeyAuth: []
      summary: List RoyaltyPolicies
      tags:
      - Royalties
  /api/v1/royalties/policies/{royaltyPolicyId}:
    get:
      consumes:
      - application/json
      description: Retrieve a RoyaltyPolicy
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Royalty Policy ID
        in: path
        name: royaltyPolicyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.RoyaltyPolicyResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a RoyaltyPolicy
      tags:
      - Royalties
  /api/v1/royalties/splits/{royaltySplitId}:
    get:
      consumes:
      - application/json
      description: Retrieve a Royalty Split
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Royalty Split ID
        in: path
        name: royaltySplitId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.RoyaltySplitResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a Royalty Split
      tags:
      - Royalties
  /api/v1/transactions:
    post:
      consumes:
      - application/json
      description: Retrieve a paginated, filtered list of Transactions
      parameters:
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      - description: Query Parameters (
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/betav0.TransactionRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.TransactionsResponse'
      security:
      - ApiKeyAuth: []
      summary: List Transactions
      tags:
      - Transactions
  /api/v1/transactions/{trxId}:
    get:
      consumes:
      - application/json
      description: Retrieve a Transaction
      parameters:
      - description: Transaction ID
        in: path
        name: trxId
        required: true
        type: string
      - description: API Key
        in: header
        name: X-API-Key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/betav0.TransactionResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a Transaction
      tags:
      - Transactions
swagger: "2.0"
